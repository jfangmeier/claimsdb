% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connect.R
\name{claims_db}
\alias{claims_db}
\alias{claims_connect}
\alias{claims_disconnect}
\title{Connect to the Synthetic Claims Database}
\usage{
claims_connect(dbdir = ":memory:", ...)

claims_disconnect(con)

claims_db()
}
\arguments{
\item{dbdir}{Location for database files. Should be a path to an existing
directory in the file system. With the default, all
data is kept in RAM}

\item{...}{Additional parameters passed to \code{\link[DBI:dbConnect]{DBI::dbConnect()}}}

\item{con}{A connection to the Star Wars database}
}
\value{
A connection to the synthetic claims database, or the path to the database.
}
\description{
Provides a connection to a DuckDB database of the CMS synthetic claims data.
Alternatively, you can use \code{claims_db()} to manually connect to the
database using \code{\link[DBI:dbConnect]{DBI::dbConnect()}} and \code{\link[duckdb:duckdb]{duckdb::duckdb()}}.
}
\section{Functions}{
\itemize{
\item \code{claims_connect}: Connect to the DuckDB database

\item \code{claims_disconnect}: Disconnect from the DuckDB database

\item \code{claims_db}: Returns the path to the claimsdb database
}}

\examples{
# Manually connect using {duckdb} and {DBI}
con <- DBI::dbConnect(
  duckdb::duckdb(),
  dbdir = claims_db(),
  read_only = TRUE
)

if (requireNamespace("dplyr", quietly = TRUE)) {
  dplyr::tbl(con, "bene")
}

# Disconnect from that database (shutdown is specific to duckdb)
DBI::dbDisconnect(con, shutdown = TRUE)

# Or connect without worrying about connection details
con <- claims_connect()

if (requireNamespace("dplyr", quietly = TRUE)) {
  dplyr::tbl(con, "bene")
}

# Similarly, disconnect quickly without worrying about duckdb arguments
claims_disconnect(con)

}
